<div class="container my-4">
  <h1 class="text-center mb-4">Dashboard</h1>

  <!-- Filter Section -->
<div class="row mb-4">
  <div class="col-md-6 mx-auto">
    <div class="bg-light p-3 rounded  text-center">
      <%= form_with url: home_dashboard_path, method: :get, local: true do %>
        <div class="row g-2">
          <div class="col-8">
            <%= select_tag :month, options_for_select(Date::MONTHNAMES.compact.each_with_index.map { |m, i| [m, i + 1] }, params[:month]&.to_i), class: "form-control", prompt: "Select Month" %>
          </div>
          <div class="col-4">
            <%= submit_tag "Filter", class: "btn btn-primary w-100" %>
          </div>
        </div>
      <% end %>

      <% if params[:month].present? %>
        <div class="mt-3">
          <%= link_to "Remove Filter", home_dashboard_path, class: "btn btn-secondary w-100" %>
        </div>
      <% end %>
    </div>
  </div>
</div>


  <!-- Summary Cards -->
  <div class="row g-4">
    <div class="col-md-4">
      <div class="shadow p-3 text-center card border-0">
        <div class="card-title">Total Expenses</div>
        <div class="stat-number text-success"><%= number_to_currency(@filtered_total_amount) %></div>
        <small class="text-muted">For Selected Month</small>
      </div>
    </div>
    <div class="col-md-4">
      <div class="shadow p-3 text-center card border-0">
        <div class="card-title">Total Records</div>
        <div class="stat-number text-primary"><%= @filtered_total_records %></div>
        <small class="text-muted">Expense entries for selected month</small>
      </div>
    </div>
    <div class="col-md-4">
      <div class="shadow p-3 text-center card border-0">
        <div class="card-title">Highest Expense</div>
        <% if @filtered_highest_expense %>
          <div class="stat-number text-danger"><%= number_to_currency(@filtered_highest_expense.importe) %></div>
          <small class="text-muted"><%= @filtered_highest_expense.concepto %></small>
        <% else %>
          <div class="stat-number text-muted">N/A</div>
        <% end %>
      </div>
    </div>
  </div>

<!-- Table: Total Expense by Concepto -->
<div class="row g-4 mt-4">
  <div class="col-12">
    <div class=" p-3 shadow card border-0">
      <div class="card-title">Total Expenses by Concepto</div>
      <div class="table-responsive">
        <table class="table table-hover table-striped align-middle text-center">
          <thead class="table">
            <tr>
              <th>#</th>
              <th>Concepto</th>
              <th>Total Expense (Importe)</th>
            </tr>
          </thead>
          <tbody>
            <% sorted_expenses = @expenses_by_concept.sort_by { |_concepto, total_importe| -total_importe } %> <!-- Sort in descending order -->
            <% sorted_expenses.each_with_index do |(concepto, total_importe), index| %>
              <tr>
                <td><%= index + 1 %></td> <!-- Row number -->
                <td><%= concepto.present? ? concepto : "N/A" %></td>
                <td><%= number_to_currency(total_importe) %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>



  <!-- Expense Trends Chart -->
  <div class="row g-4 mt-4">
    <div class="col-12">
      <div class=" p-3 shadow card border-0">
        <div class="card-title">Monthly Expense Trends</div>
        <canvas id="expenseChart" class="chart-container bg-light rounded"></canvas>
        <small class="text-muted">Track your spending over time</small>
      </div>
    </div>
  </div>
</div>


<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const ctx = document.getElementById('expenseChart').getContext('2d');
  const expenseChart = new Chart(ctx, {
      type: 'bar',
      data: {
          labels: <%= raw @monthly_labels.to_json %>, // Properly formatted labels
          datasets: [{
              label: 'Monthly Expenses',
              data: <%= raw @monthly_expenses.to_json %>, // Properly formatted data
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              borderColor: 'rgba(75, 192, 192, 1)',
              borderWidth: 1
          }]
      },
      options: {
          responsive: true,
          scales: {
              y: {
                  beginAtZero: true // Ensure y-axis starts at 0
              }
          }
      }
  });

</script>